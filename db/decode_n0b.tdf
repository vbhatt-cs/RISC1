--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV GX" LPM_DECODES=9 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 15.1 cbx_cycloneii 2015:10:14:18:59:15:SJ cbx_lpm_add_sub 2015:10:14:18:59:15:SJ cbx_lpm_compare 2015:10:14:18:59:15:SJ cbx_lpm_decode 2015:10:14:18:59:15:SJ cbx_mgl 2015:10:21:19:02:34:SJ cbx_nadder 2015:10:14:18:59:15:SJ cbx_stratix 2015:10:14:18:59:15:SJ cbx_stratixii 2015:10:14:18:59:15:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_n0b
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[8..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[8..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1002w[3..0]	: WIRE;
	w_anode1012w[3..0]	: WIRE;
	w_anode1024w[1..0]	: WIRE;
	w_anode1031w[3..0]	: WIRE;
	w_anode1042w[3..0]	: WIRE;
	w_anode1052w[3..0]	: WIRE;
	w_anode1062w[3..0]	: WIRE;
	w_anode1072w[3..0]	: WIRE;
	w_anode1082w[3..0]	: WIRE;
	w_anode1092w[3..0]	: WIRE;
	w_anode1102w[3..0]	: WIRE;
	w_anode926w[1..0]	: WIRE;
	w_anode935w[3..0]	: WIRE;
	w_anode952w[3..0]	: WIRE;
	w_anode962w[3..0]	: WIRE;
	w_anode972w[3..0]	: WIRE;
	w_anode982w[3..0]	: WIRE;
	w_anode992w[3..0]	: WIRE;
	w_data924w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[8..0] = eq_wire[8..0];
	eq_wire[] = ( ( w_anode1102w[3..3], w_anode1092w[3..3], w_anode1082w[3..3], w_anode1072w[3..3], w_anode1062w[3..3], w_anode1052w[3..3], w_anode1042w[3..3], w_anode1031w[3..3]), ( w_anode1012w[3..3], w_anode1002w[3..3], w_anode992w[3..3], w_anode982w[3..3], w_anode972w[3..3], w_anode962w[3..3], w_anode952w[3..3], w_anode935w[3..3]));
	w_anode1002w[] = ( (w_anode1002w[2..2] & w_data924w[2..2]), (w_anode1002w[1..1] & w_data924w[1..1]), (w_anode1002w[0..0] & (! w_data924w[0..0])), w_anode926w[1..1]);
	w_anode1012w[] = ( (w_anode1012w[2..2] & w_data924w[2..2]), (w_anode1012w[1..1] & w_data924w[1..1]), (w_anode1012w[0..0] & w_data924w[0..0]), w_anode926w[1..1]);
	w_anode1024w[] = ( (w_anode1024w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1031w[] = ( (w_anode1031w[2..2] & (! w_data924w[2..2])), (w_anode1031w[1..1] & (! w_data924w[1..1])), (w_anode1031w[0..0] & (! w_data924w[0..0])), w_anode1024w[1..1]);
	w_anode1042w[] = ( (w_anode1042w[2..2] & (! w_data924w[2..2])), (w_anode1042w[1..1] & (! w_data924w[1..1])), (w_anode1042w[0..0] & w_data924w[0..0]), w_anode1024w[1..1]);
	w_anode1052w[] = ( (w_anode1052w[2..2] & (! w_data924w[2..2])), (w_anode1052w[1..1] & w_data924w[1..1]), (w_anode1052w[0..0] & (! w_data924w[0..0])), w_anode1024w[1..1]);
	w_anode1062w[] = ( (w_anode1062w[2..2] & (! w_data924w[2..2])), (w_anode1062w[1..1] & w_data924w[1..1]), (w_anode1062w[0..0] & w_data924w[0..0]), w_anode1024w[1..1]);
	w_anode1072w[] = ( (w_anode1072w[2..2] & w_data924w[2..2]), (w_anode1072w[1..1] & (! w_data924w[1..1])), (w_anode1072w[0..0] & (! w_data924w[0..0])), w_anode1024w[1..1]);
	w_anode1082w[] = ( (w_anode1082w[2..2] & w_data924w[2..2]), (w_anode1082w[1..1] & (! w_data924w[1..1])), (w_anode1082w[0..0] & w_data924w[0..0]), w_anode1024w[1..1]);
	w_anode1092w[] = ( (w_anode1092w[2..2] & w_data924w[2..2]), (w_anode1092w[1..1] & w_data924w[1..1]), (w_anode1092w[0..0] & (! w_data924w[0..0])), w_anode1024w[1..1]);
	w_anode1102w[] = ( (w_anode1102w[2..2] & w_data924w[2..2]), (w_anode1102w[1..1] & w_data924w[1..1]), (w_anode1102w[0..0] & w_data924w[0..0]), w_anode1024w[1..1]);
	w_anode926w[] = ( (w_anode926w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode935w[] = ( (w_anode935w[2..2] & (! w_data924w[2..2])), (w_anode935w[1..1] & (! w_data924w[1..1])), (w_anode935w[0..0] & (! w_data924w[0..0])), w_anode926w[1..1]);
	w_anode952w[] = ( (w_anode952w[2..2] & (! w_data924w[2..2])), (w_anode952w[1..1] & (! w_data924w[1..1])), (w_anode952w[0..0] & w_data924w[0..0]), w_anode926w[1..1]);
	w_anode962w[] = ( (w_anode962w[2..2] & (! w_data924w[2..2])), (w_anode962w[1..1] & w_data924w[1..1]), (w_anode962w[0..0] & (! w_data924w[0..0])), w_anode926w[1..1]);
	w_anode972w[] = ( (w_anode972w[2..2] & (! w_data924w[2..2])), (w_anode972w[1..1] & w_data924w[1..1]), (w_anode972w[0..0] & w_data924w[0..0]), w_anode926w[1..1]);
	w_anode982w[] = ( (w_anode982w[2..2] & w_data924w[2..2]), (w_anode982w[1..1] & (! w_data924w[1..1])), (w_anode982w[0..0] & (! w_data924w[0..0])), w_anode926w[1..1]);
	w_anode992w[] = ( (w_anode992w[2..2] & w_data924w[2..2]), (w_anode992w[1..1] & (! w_data924w[1..1])), (w_anode992w[0..0] & w_data924w[0..0]), w_anode926w[1..1]);
	w_data924w[2..0] = data_wire[2..0];
END;
--VALID FILE
